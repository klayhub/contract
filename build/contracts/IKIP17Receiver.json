{
  "contractName": "IKIP17Receiver",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "operator",
          "type": "address"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onKIP17Received",
      "outputs": [
        {
          "name": "",
          "type": "bytes4"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"operator\",\"type\":\"address\"},{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onKIP17Received\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from KIP17 asset contracts.see http://kips.klaytn.com/KIPs/kip-17-non_fungible_token\",\"methods\":{\"onKIP17Received(address,address,uint256,bytes)\":{\"details\":\"The KIP17 smart contract calls this function on the recipient after a `safeTransfer`. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onKIP17Received.selector`. This function MAY throw to revert and reject the transfer. Note: the KIP17 contract address is always the message sender.\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"operator\":\"The address which called `safeTransferFrom` function\",\"tokenId\":\"The NFT identifier which is being transferred\"},\"return\":\"bytes4 `bytes4(keccak256(\\\"onKIP17Received(address,address,uint256,bytes)\\\"))`\"}},\"title\":\"KIP17 token receiver interface\"},\"userdoc\":{\"methods\":{\"onKIP17Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of an NFT\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/gimseontae/Desktop/project/contract/contracts/token/KIP17/IKIP17Receiver.sol\":\"IKIP17Receiver\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/gimseontae/Desktop/project/contract/contracts/token/KIP17/IKIP17Receiver.sol\":{\"keccak256\":\"0xf3dee67a4a395e20ad0459e1f255b9c563272d2fb6752e7421c1302cfcf00ff0\",\"urls\":[\"bzzr://28f7d1d507cc9f1377346b3c8a868b712a68b79dfe8888231b30671848b0a80b\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title KIP17 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from KIP17 asset contracts.\n * @dev see http://kips.klaytn.com/KIPs/kip-17-non_fungible_token\n */\ncontract IKIP17Receiver {\n    /**\n     * @notice Handle the receipt of an NFT\n     * @dev The KIP17 smart contract calls this function on the recipient\n     * after a `safeTransfer`. This function MUST return the function selector,\n     * otherwise the caller will revert the transaction. The selector to be\n     * returned can be obtained as `this.onKIP17Received.selector`. This\n     * function MAY throw to revert and reject the transfer.\n     * Note: the KIP17 contract address is always the message sender.\n     * @param operator The address which called `safeTransferFrom` function\n     * @param from The address which previously owned the token\n     * @param tokenId The NFT identifier which is being transferred\n     * @param data Additional data with no specified format\n     * @return bytes4 `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`\n     */\n    function onKIP17Received(address operator, address from, uint256 tokenId, bytes memory data)\n    public returns (bytes4);\n}\n",
  "sourcePath": "/Users/gimseontae/Desktop/project/contract/contracts/token/KIP17/IKIP17Receiver.sol",
  "ast": {
    "absolutePath": "/Users/gimseontae/Desktop/project/contract/contracts/token/KIP17/IKIP17Receiver.sol",
    "exportedSymbols": {
      "IKIP17Receiver": [
        4644
      ]
    },
    "id": 4645,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4630,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:51"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title KIP17 token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\nfrom KIP17 asset contracts.\n@dev see http://kips.klaytn.com/KIPs/kip-17-non_fungible_token",
        "fullyImplemented": false,
        "id": 4644,
        "linearizedBaseContracts": [
          4644
        ],
        "name": "IKIP17Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\n@dev The KIP17 smart contract calls this function on the recipient\nafter a `safeTransfer`. This function MUST return the function selector,\notherwise the caller will revert the transaction. The selector to be\nreturned can be obtained as `this.onKIP17Received.selector`. This\nfunction MAY throw to revert and reject the transfer.\nNote: the KIP17 contract address is always the message sender.\n@param operator The address which called `safeTransferFrom` function\n@param from The address which previously owned the token\n@param tokenId The NFT identifier which is being transferred\n@param data Additional data with no specified format\n@return bytes4 `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`",
            "id": 4643,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKIP17Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4632,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1151:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4634,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1169:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4636,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1183:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4638,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1200:17:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4637,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1150:68:51"
            },
            "returnParameters": {
              "id": 4642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4641,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1239:6:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4640,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1238:8:51"
            },
            "scope": 4644,
            "src": "1126:121:51",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4645,
        "src": "242:1007:51"
      }
    ],
    "src": "0:1250:51"
  },
  "legacyAST": {
    "absolutePath": "/Users/gimseontae/Desktop/project/contract/contracts/token/KIP17/IKIP17Receiver.sol",
    "exportedSymbols": {
      "IKIP17Receiver": [
        4644
      ]
    },
    "id": 4645,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4630,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:51"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title KIP17 token receiver interface\n@dev Interface for any contract that wants to support safeTransfers\nfrom KIP17 asset contracts.\n@dev see http://kips.klaytn.com/KIPs/kip-17-non_fungible_token",
        "fullyImplemented": false,
        "id": 4644,
        "linearizedBaseContracts": [
          4644
        ],
        "name": "IKIP17Receiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice Handle the receipt of an NFT\n@dev The KIP17 smart contract calls this function on the recipient\nafter a `safeTransfer`. This function MUST return the function selector,\notherwise the caller will revert the transaction. The selector to be\nreturned can be obtained as `this.onKIP17Received.selector`. This\nfunction MAY throw to revert and reject the transfer.\nNote: the KIP17 contract address is always the message sender.\n@param operator The address which called `safeTransferFrom` function\n@param from The address which previously owned the token\n@param tokenId The NFT identifier which is being transferred\n@param data Additional data with no specified format\n@return bytes4 `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`",
            "id": 4643,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onKIP17Received",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4632,
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1151:16:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1151:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4634,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1169:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4633,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4636,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1183:15:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4638,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1200:17:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4637,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1200:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1150:68:51"
            },
            "returnParameters": {
              "id": 4642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4641,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 4643,
                  "src": "1239:6:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 4640,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1238:8:51"
            },
            "scope": 4644,
            "src": "1126:121:51",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 4645,
        "src": "242:1007:51"
      }
    ],
    "src": "0:1250:51"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2021-11-18T17:17:08.610Z",
  "devdoc": {
    "details": "Interface for any contract that wants to support safeTransfers from KIP17 asset contracts.see http://kips.klaytn.com/KIPs/kip-17-non_fungible_token",
    "methods": {
      "onKIP17Received(address,address,uint256,bytes)": {
        "details": "The KIP17 smart contract calls this function on the recipient after a `safeTransfer`. This function MUST return the function selector, otherwise the caller will revert the transaction. The selector to be returned can be obtained as `this.onKIP17Received.selector`. This function MAY throw to revert and reject the transfer. Note: the KIP17 contract address is always the message sender.",
        "params": {
          "data": "Additional data with no specified format",
          "from": "The address which previously owned the token",
          "operator": "The address which called `safeTransferFrom` function",
          "tokenId": "The NFT identifier which is being transferred"
        },
        "return": "bytes4 `bytes4(keccak256(\"onKIP17Received(address,address,uint256,bytes)\"))`"
      }
    },
    "title": "KIP17 token receiver interface"
  },
  "userdoc": {
    "methods": {
      "onKIP17Received(address,address,uint256,bytes)": {
        "notice": "Handle the receipt of an NFT"
      }
    }
  }
}